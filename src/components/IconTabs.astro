---
import { Image } from "astro:assets";

import rlyehIcon from "../assets/icons/rlyeh-icon.svg";
import madnessIcon from "../assets/icons/madness-icon.svg";
import plateauIcon from "../assets/icons/plateau-icon.svg";
import locationData from "../data/locations.json";

const locationIcons = {
  "R'lyeh": rlyehIcon,
  "Mountains of Madness": madnessIcon,
  "Plateau of Leng": plateauIcon,
};

const { tabData, ariaLabel } = Astro.props;
---

<nav class="icon-tabs | flex flex-column">
  {
    locationData.map((data, index) => (
      <a class="text-light" href={data.url}>
        <span class=" visually-hidden fs-s text-center">{data.name}</span>
        <Image src={locationIcons[data.name]} alt="" height={32} width={32} />
      </a>
    ))
  }
</nav>

<style>
  .icon-tabs {
    --gap: var(--space-m);
    grid-area: nav;

    a {
      --gap: var(--space-xs);

      position: relative;
      background-color: hsl(var(--base-d-3) / 1);
      padding: 0.75em;
      border: 1px solid hsl(var(--base) / 0.25);
      border-radius: var(--radius-xs);

      transition:
        background-color 0.3s ease,
        transform 0.3s ease-in-out,
        rotate 0.3s ease,
        scale 0.3s ease;

      &:hover,
      &:focus-within {
        background-color: hsl(var(--base-d-2) / 1);
        transform: translateY(-5px);
      }
    }

    img {
      max-width: unset;
      order: -1;
    }
  }

  @media (max-width: 48rem) {
    .icon-tabs {
      grid-area: nav;
      flex-direction: row;

      a {
        &:hover,
        &:focus-within {
          transform: translateY(-3px);
          scale: 1.05;
        }
      }
    }
  }
</style>

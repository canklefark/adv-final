---
const { tabData, ariaLabel } = Astro.props;
---

<nav class="tab-list | flex" role="tablist" aria-label={ariaLabel}>
  {
    tabData.map((data, index) => (
      <a
        class="ff-body uppercase text-dark fw-bold"
        href={data.url}
        data-active-tab={index === 0 ? "true" : "false"}
        aria-selected={index === 0 ? "true" : "false"}
        role="tab"
        aria-controls={`${data.name.toLowerCase()}-tab`}
        data-image={`${data.name.toLowerCase()}-image`}
        tabindex={index === 0 ? "0" : "-1"}>
        {data.name}
      </a>
    ))
  }
</nav>

<style>
  .tab-list {
    --gap: 0;
  }

  a {
    position: relative;
    text-align: center;
    background-color: var(--clr-base);
    width: 100%;
    padding: var(--space-s) var(--space-m);
    border-radius: 9px 9px 0 0;
    box-shadow: 0px 0px 10px 2px var(--shadow-primary);
    display: block;
    transform: translateY(0.3rem);
    transition: transform 0.3s ease;

    &:hover:not([data-active-tab="true"]) {
      transform: translateY(0);
    }

    &:nth-child(1) {
      z-index: 4;
    }

    &:nth-child(2) {
      z-index: 3;
    }

    &:nth-child(3) {
      z-index: 2;
    }

    &:nth-child(4) {
      z-index: 1;
    }

    &[data-active-tab="true"] {
      background-color: var(--clr-base-l-1);
      box-shadow: 5px 0px 10px 2px var(--shadow-primary);
      z-index: 5;
    }
  }
</style>

<!-- 
<div class="tab-list | flex" role="tablist" aria-label={ariaLabel}>
  {
    tabName.map((name: string, index: number) => (
      <button
        class="ff-sans-cond uppercase text-accent bg-body letter-spacing-2"
        aria-selected={index === 0 ? "true" : "false"}
        role="tab"
        aria-controls={`${name.toLowerCase()}-tab`}
        data-image={`${name.toLowerCase()}-image`}
        tabindex={index === 0 ? "0" : "-1"}>
        {name}
      </button>
    ))
  }
</div>

<style>
  .tab-list {
    --gap: var(--space-l);
    max-width: fit-content;

    & > * {
      background-color: transparent;
    }
  }
</style> -->
